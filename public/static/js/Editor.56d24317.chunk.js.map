{"version":3,"sources":["components/ListErrors.js","components/Editor.js"],"names":["ListErrors","errors","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","Object","keys","map","key","React","PureComponent","Editor","_this","F_code_captain_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","updateFieldEvent","ev","onUpdateField","target","value","F_code_captain_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","F_code_captain_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","changeTitle","changeDescription","changeBody","changeTagInput","watchForEnter","keyCode","preventDefault","onAddTag","removeTagHandler","tag","onRemoveTag","submitForm","article","title","description","body","tagList","slug","articleSlug","promise","agent","Articles","update","assign","create","onSubmit","prevProps","match","params","onUnload","onLoad","get","_this2","react__WEBPACK_IMPORTED_MODULE_7___default","_ListErrors__WEBPACK_IMPORTED_MODULE_6__","type","placeholder","onChange","rows","tagInput","onKeyUp","onClick","disabled","inProgress","connect","state","F_code_captain_web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","editor","dispatch","ADD_TAG","payload","EDITOR_PAGE_LOADED","REMOVE_TAG","ARTICLE_SUBMITTED","EDITOR_PAGE_UNLOADED","UPDATE_FIELD_EDITOR"],"mappings":"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","file":"static/js/Editor.56d24317.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ListErrors extends React.PureComponent {\r\n  render() {\r\n    const errors = this.props.errors;\r\n    if (errors) {\r\n      return (\r\n        <ul className=\"error-messages\">\r\n          {\r\n            Object.keys(errors).map(key => {\r\n              return (\r\n                <li key={key}>\r\n                  {key} {errors[key]}\r\n                </li>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ListErrors;\r\n","import ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport agent from '../agent';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  ADD_TAG,\r\n  EDITOR_PAGE_LOADED,\r\n  REMOVE_TAG,\r\n  ARTICLE_SUBMITTED,\r\n  EDITOR_PAGE_UNLOADED,\r\n  UPDATE_FIELD_EDITOR\r\n} from '../constants/actionTypes';\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state.editor\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddTag: () =>\r\n    dispatch({ type: ADD_TAG }),\r\n  onLoad: payload =>\r\n    dispatch({ type: EDITOR_PAGE_LOADED, payload }),\r\n  onRemoveTag: tag =>\r\n    dispatch({ type: REMOVE_TAG, tag }),\r\n  onSubmit: payload =>\r\n    dispatch({ type: ARTICLE_SUBMITTED, payload }),\r\n  onUnload: payload =>\r\n    dispatch({ type: EDITOR_PAGE_UNLOADED }),\r\n  onUpdateField: (key, value) =>\r\n    dispatch({ type: UPDATE_FIELD_EDITOR, key, value })\r\n});\r\n\r\nclass Editor extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n\r\n    const updateFieldEvent =\r\n      key => ev => this.props.onUpdateField(key, ev.target.value);\r\n    this.changeTitle = updateFieldEvent('title');\r\n    this.changeDescription = updateFieldEvent('description');\r\n    this.changeBody = updateFieldEvent('body');\r\n    this.changeTagInput = updateFieldEvent('tagInput');\r\n\r\n    this.watchForEnter = ev => {\r\n      if (ev.keyCode === 13) {\r\n        ev.preventDefault();\r\n        this.props.onAddTag();\r\n      }\r\n    };\r\n\r\n    this.removeTagHandler = tag => () => {\r\n      this.props.onRemoveTag(tag);\r\n    };\r\n\r\n    this.submitForm = ev => {\r\n      ev.preventDefault();\r\n      const article = {\r\n        title: this.props.title,\r\n        description: this.props.description,\r\n        body: this.props.body,\r\n        tagList: this.props.tagList\r\n      };\r\n\r\n      const slug = { slug: this.props.articleSlug };\r\n      const promise = this.props.articleSlug ?\r\n        agent.Articles.update(Object.assign(article, slug)) :\r\n        agent.Articles.create(article);\r\n\r\n      this.props.onSubmit(promise);\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.slug !== this.props.match.params.slug) {\r\n      if (this.props.match.params.slug) {\r\n        this.props.onUnload();\r\n        return this.props.onLoad(agent.Articles.get(this.props.match.params.slug));\r\n      }\r\n      this.props.onLoad(null);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.match.params.slug) {\r\n      return this.props.onLoad(agent.Articles.get(this.props.match.params.slug));\r\n    }\r\n    this.props.onLoad(null);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"editor-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-10 offset-md-1 col-xs-12\">\r\n\r\n              <ListErrors errors={this.props.errors}></ListErrors>\r\n\r\n              <form>\r\n                <fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"text\"\r\n                      placeholder=\"Article Title\"\r\n                      value={this.props.title}\r\n                      onChange={this.changeTitle} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"What's this article about?\"\r\n                      value={this.props.description}\r\n                      onChange={this.changeDescription} />\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      rows=\"8\"\r\n                      placeholder=\"Write your article (in markdown)\"\r\n                      value={this.props.body}\r\n                      onChange={this.changeBody}>\r\n                    </textarea>\r\n                  </fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter tags\"\r\n                      value={this.props.tagInput}\r\n                      onChange={this.changeTagInput}\r\n                      onKeyUp={this.watchForEnter} />\r\n\r\n                    <div className=\"tag-list\">\r\n                      {\r\n                        (this.props.tagList || []).map(tag => {\r\n                          return (\r\n                            <span className=\"tag-default tag-pill\" key={tag}>\r\n                              <i  className=\"ion-close-round\"\r\n                                  onClick={this.removeTagHandler(tag)}>\r\n                              </i>\r\n                              {tag}\r\n                            </span>\r\n                          );\r\n                        })\r\n                      }\r\n                    </div>\r\n                  </fieldset>\r\n\r\n                  <button\r\n                    className=\"btn btn-lg pull-xs-right btn-primary\"\r\n                    type=\"button\"\r\n                    disabled={this.props.inProgress}\r\n                    onClick={this.submitForm}>\r\n                    Publish Article\r\n                  </button>\r\n\r\n                </fieldset>\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);\r\n"],"sourceRoot":""}
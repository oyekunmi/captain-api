{"version":3,"sources":["components/ListErrors.js","components/Login.js"],"names":["ListErrors","errors","this","props","react_default","a","createElement","className","Object","keys","map","key","React","PureComponent","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changePassword","ev","onChangePassword","target","value","submitForm","password","preventDefault","onSubmit","components_ListErrors","type","placeholder","onChange","disabled","inProgress","connect","state","objectSpread","auth","dispatch","UPDATE_FIELD_AUTH","LOGIN","payload","agent","Auth","login"],"mappings":"mKAyBeA,mLArBX,IAAMC,EAASC,KAAKC,MAAMF,OAC1B,OAAIA,EAEAG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAEVC,OAAOC,KAAKR,GAAQS,IAAI,SAAAC,GACtB,OACEP,EAAAC,EAAAC,cAAA,MAAIK,IAAKA,GACNA,EADH,IACSV,EAAOU,OAQnB,YAlBYC,IAAMC,sCCmBzBC,cACJ,SAAAA,IAAc,IAAAC,EAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAN,KAAAY,IACZC,EAAAP,OAAAS,EAAA,EAAAT,CAAAN,KAAAM,OAAAU,EAAA,EAAAV,CAAAM,GAAAK,KAAAjB,QACKkB,eAAiB,SAAAC,GAAE,OAAIN,EAAKZ,MAAMmB,iBAAiBD,EAAGE,OAAOC,QAClET,EAAKU,WAAa,SAACC,GAAD,OAAc,SAAAL,GAC9BA,EAAGM,iBACHZ,EAAKZ,MAAMyB,SAASF,KALVX,wHAcZ,IAAMW,EAAWxB,KAAKC,MAAMuB,SAC5B,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,WAEAH,EAAAC,EAAAC,cAACuB,EAAD,CAAY5B,OAAQC,KAAKC,MAAMF,SAE/BG,EAAAC,EAAAC,cAAA,QAAMsB,SAAU1B,KAAKuB,WAAWC,IAC9BtB,EAAAC,EAAAC,cAAA,gBAEEF,EAAAC,EAAAC,cAAA,YAAUC,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SACEC,UAAU,+BACVuB,KAAK,WACLC,YAAY,kBACZP,MAAOE,EACPM,SAAU9B,KAAKkB,kBAGnBhB,EAAAC,EAAAC,cAAA,UACEC,UAAU,uCACVuB,KAAK,SACLG,SAAU/B,KAAKC,MAAM+B,YAHvB,wBAtCEtB,IAAMC,eAwDXsB,sBAnES,SAAAC,GAAK,OAAA5B,OAAA6B,EAAA,EAAA7B,CAAA,GAAU4B,EAAME,OAElB,SAAAC,GAAQ,MAAK,CACtCjB,iBAAkB,SAAAE,GAAK,OACrBe,EAAS,CAAET,KAAMU,IAAmB7B,IAAK,WAAYa,WACvDI,SAAU,SAACF,GAAD,OACRa,EAAS,CAAET,KAAMW,IAAOC,QAASC,IAAMC,KAAKC,MAAMnB,QA6DvCS,CAA6CrB","file":"static/js/Login.4db807ef.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ListErrors extends React.PureComponent {\r\n  render() {\r\n    const errors = this.props.errors;\r\n    if (errors) {\r\n      return (\r\n        <ul className=\"error-messages\">\r\n          {\r\n            Object.keys(errors).map(key => {\r\n              return (\r\n                <li key={key}>\r\n                  {key} {errors[key]}\r\n                </li>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ListErrors;\r\n","import ListErrors from './ListErrors';\r\nimport React from 'react';\r\nimport agent from '../agent';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  UPDATE_FIELD_AUTH,\r\n  LOGIN,\r\n  // LOGIN_PAGE_UNLOADED\r\n} from '../constants/actionTypes';\r\n\r\nconst mapStateToProps = state => ({ ...state.auth });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangePassword: value =>\r\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n  onSubmit: (password) =>\r\n    dispatch({ type: LOGIN, payload: agent.Auth.login(password) }),\r\n  // onUnload: () =>\r\n  //   dispatch({ type: LOGIN_PAGE_UNLOADED })\r\n});\r\n\r\nclass Login extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.changePassword = ev => this.props.onChangePassword(ev.target.value);\r\n    this.submitForm = (password) => ev => {\r\n      ev.preventDefault();\r\n      this.props.onSubmit(password);\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // this.props.onUnload();\r\n  }\r\n\r\n  render() {\r\n    const password = this.props.password;\r\n    return (\r\n      <div className=\"auth-page\">\r\n        <div className=\"container page\">\r\n          <div className=\"row\">\r\n\r\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\r\n              <h1 className=\"text-xs-center\">Sign In</h1>\r\n\r\n              <ListErrors errors={this.props.errors} />\r\n\r\n              <form onSubmit={this.submitForm(password)}>\r\n                <fieldset>\r\n\r\n                  <fieldset className=\"form-group\">\r\n                    <input\r\n                      className=\"form-control form-control-lg\"\r\n                      type=\"password\"\r\n                      placeholder=\"Enter pass code\"\r\n                      value={password}\r\n                      onChange={this.changePassword} />\r\n                  </fieldset>\r\n\r\n                  <button\r\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.inProgress}>\r\n                    Sign in\r\n                  </button>\r\n\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}